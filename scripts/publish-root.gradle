ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''
ext["sonatypeStagingProfileId"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    // Read local.properties file first if it exists
    Properties p = new Properties()
    new FileInputStream(secretPropsFile).withCloseable { is -> p.load(is) }
    p.each { name, value ->
        ext[name] = value }
} else {
    // Use system environment variables
    ext["ossrhUsername"] = "$System.env.OSSRH_USERNAME"
    ext["ossrhPassword"] = "$System.env.OSSRH_PASSWORD"
    ext["sonatypeStagingProfileId"] = "$System.env.SONATYPE_STAGING_PROFILE_ID"
    ext["signing.keyId"] = "$System.env.GPG_KEY_ID"
    ext["signing.password"] = "$System.env.GPG_PASSPHRASE"
    ext["signing.secretKeyRingFile"] = "$System.env.SIGNING_SECRET_KEY_RING_FILE"
}

// Set up Sonatype repository
nexusPublishing {
    repositories {
        sonatype {
            stagingProfileId = sonatypeStagingProfileId
            username = ossrhUsername
            password = ossrhPassword
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}